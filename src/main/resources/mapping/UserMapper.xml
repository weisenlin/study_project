<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wsl.study.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.wsl.study.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pswd" property="pswd" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="shiroMap" type="com.wsl.study.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pswd" property="pswd" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIGINT" />
    <collection property="roles" ofType="com.wsl.study.model.Role">
      <result column="r_id" property="id"/>
      <result column="r_name" property="name"/>
      <collection property="permissions" ofType="com.wsl.study.model.Permission">
        <result column="p_id" property="id"/>
        <result column="p_name" property="name"/>
      </collection>
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, nickname, email, pswd, create_time, last_login_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from u_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from u_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wsl.study.model.User" >
    insert into u_user (id, nickname, email, 
      pswd, create_time, last_login_time, 
      status)
    values (#{id,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{pswd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.wsl.study.model.User" >
    insert into u_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="pswd != null" >
        pswd,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null" >
        #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wsl.study.model.User" >
    update u_user
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null" >
        pswd = #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wsl.study.model.User" >
    update u_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pswd = #{pswd,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getUserByName" resultMap="shiroMap">
    SELECT
	u_user.*, u_role.id as r_id,u_role.name as r_name, u_permission.id as p_id ,u_permission.name as p_name
    FROM
        u_user
    LEFT JOIN u_user_role ON u_user_role.uid = u_user.id
    LEFT JOIN u_role ON u_role.id = u_user_role.rid
    LEFT JOIN u_role_permission ON u_role_permission.rid = u_role.id
    LEFT JOIN u_permission ON u_permission.id = u_role_permission.pid
    WHERE
	u_user.nickname = #{nickname,jdbcType=VARCHAR}
  </select>

  <select id="findAll" resultMap="shiroMap">
    SELECT
    u_user.*, u_role.id as r_id,u_role.name as r_name, u_permission.id as p_id ,u_permission.name as p_name
    FROM
    u_user
    LEFT JOIN u_user_role ON u_user_role.uid = u_user.id
    LEFT JOIN u_role ON u_role.id = u_user_role.rid
    LEFT JOIN u_role_permission ON u_role_permission.rid = u_role.id
    LEFT JOIN u_permission ON u_permission.id = u_role_permission.pid
    <if test="userName !=null">
      where u_user.nickname like '%${userName}%'
    </if>
  </select>


  <select id="findAllForPage" resultMap="BaseResultMap">
    SELECT
    u_user.*
    FROM
    u_user
    <if test="userName !=null">
      where u_user.nickname like '%${userName}%'
    </if>
  </select>


  <select id="findCount" resultType="int">
    SELECT
    count(*)
    FROM
    u_user
  </select>
</mapper>